----1) Crear una tabla llamada personal con los campos clave_personal, nombre, paterno, materno, rfc, fechanacimiento, email -GERARDO RODRIGUEZ
CREATE TABLE personal (
    clave_personal NUMBER(10) PRIMARY KEY,
    nombre VARCHAR(30) NOT NULL,
    apaterno VARCHAR(30) NOT NULL,
    amaterno VARCHAR(30) NOT NULL, 
    rfc VARCHAR(30) NOT NULL,
    fechanacimiento DATE NOT NULL,
    email VARCHAR(30) NOT NULL
)
----2) Crear una tabla llamada prestamo con los campos no_prestamo, clave_personal, fecha, monto, tipo
CREATE TABLE prestamo (
    no_prestamo NUMBER(10) PRIMARY KEY,
    clave_personal NUMBER(10) NULL,
    fecha DATE NOT NULL,
    monto VARCHAR(30) NOT NULL, 
    tipo VARCHAR(30) NOT NULL
);

----3) Prestamo debe tener un CONSTRAINT de FOREIGN KEY en DELETE CASCADE para clave_personal
ALTER TABLE prestamo
    ADD CONSTRAINT fk_personal
        FOREIGN KEY (clave_personal) 
        REFERENCES personal (clave_personal)
        ON DELETE CASCADE;

----4) Insertar 3 registros en la tabla personal y 2 registros por cada persona en prestamo
CREATE SEQUENCE INCREMENTO_ID_PERSONAL
INCREMENT BY 1
START WITH 1
NOCACHE;

SELECT INCREMENTO_ID_PERSONAL.nextval FROM DUAL;

INSERT INTO personal (clave_personal, nombre, apaterno, amaterno, rfc, fechanacimiento, email) 
values (INCREMENTO_ID_PERSONAL.nextval, 'PETER', 'PARKER', 'GOMEZ', 'PAGP700501MX1', '05-01-1970', 'pparker@gmail.com');
INSERT INTO personal (clave_personal, nombre, apaterno, amaterno, rfc, fechanacimiento, email) 
VALUES (INCREMENTO_ID_PERSONAL.nextval, 'LUISA', 'LANE', 'PEREZ', 'LAPL800601MX2', '06-02-1980', 'llane@gmail.com');
INSERT INTO personal (clave_personal, nombre, apaterno, amaterno, rfc, fechanacimiento, email) 
VALUES (INCREMENTO_ID_PERSONAL.nextval, 'TOÑO', 'STARK', 'GONZALEZ', 'SAGT900703MX3', '07-03-1990', 'tstark@gmail.com');

SELECT * FROM personal ORDER BY 1;

CREATE SEQUENCE INCREMENTO_NO_PRESTAMO
INCREMENT BY 1
START WITH 1
NOCACHE;

SELECT INCREMENTO_NO_PRESTAMO.nextval FROM DUAL;

INSERT INTO prestamo (no_prestamo, clave_personal, fecha, monto, tipo) VALUES (INCREMENTO_NO_PRESTAMO.nextval, '4', '02-01-2003', '2500000', 'HIPOTECARIO');
INSERT INTO prestamo (no_prestamo, clave_personal, fecha, monto, tipo) VALUES (INCREMENTO_NO_PRESTAMO.nextval, '6', '03-02-2013', '350000', 'AUTOFINANCIAMIENTO');

SELECT * FROM prestamo;

----5) Eliminar 1 registro de personal y validar el CONSTRAINT de DELETE

INSERT INTO personal (clave_personal, nombre, apaterno, amaterno, rfc, fechanacimiento, email) 
VALUES (INCREMENTO_ID_PERSONAL.nextval, 'ELON', 'MUSK', 'RODRIGUEZ', 'MURE900703MX3', '07-03-1990', 'emusk@gmail.com');

SELECT * FROM personal WHERE apaterno = 'MUSK';

INSERT INTO prestamo (no_prestamo, clave_personal, fecha, monto, tipo) 
VALUES (INCREMENTO_NO_PRESTAMO.nextval, '14', '03-02-2023', '350000', 'PERSONAL');

SELECT * FROM prestamo WHERE clave_personal = 14;

DELETE FROM personal WHERE clave_personal = 14;
SELECT * FROM prestamo;

----6) LIstar el total de prestamo por personal

SELECT p.clave_personal, sum(r.monto) AS deuda_total
FROM personal p
RIGHT JOIN prestamo r ON p.clave_personal = r.clave_personal
GROUP BY p.clave_personal
ORDER BY 1;
----7) Listar el personal que no tiene ningun prestamo
SELECT p.clave_personal, p.nombre, p.apaterno, p.amaterno 
FROM personal p
LEFT JOIN prestamo r ON p.clave_personal = r.clave_personal
WHERE r.clave_personal is NULL;

----8) Listar el total de personas por año de nacimiento, basado en el campo fechanaminento
SELECT
  EXTRACT(year FROM fechanacimiento) AS ANIO,
  COUNT(clave_personal) AS total_personas
FROM personal
GROUP BY EXTRACT(year FROM fechanacimiento);

----9) Listar las personas que no tengan un email valido
INSERT INTO personal (clave_personal, nombre, apaterno, amaterno, rfc, fechanacimiento, email) 
VALUES (INCREMENTO_ID_PERSONAL.nextval, 'MIKE', 'JORDAN', 'GUTIERREZ', 'MIJG900703MX3', '07-03-1990', 'mjordan @gmail.com');
INSERT INTO personal (clave_personal, nombre, apaterno, amaterno, rfc, fechanacimiento, email) 
VALUES (INCREMENTO_ID_PERSONAL.nextval, 'BUGS', 'BUNNY', 'FERNANDEZ', 'BUBG900703MX3', '07-03-1980', ' ');

SELECT p.clave_personal, p.nombre, p.apaterno, p.amaterno, p.email
FROM personal p 
WHERE NOT regexp_like (email,'^[a-z0-9._-]+@[a-z0-9.-]+\.[a-z]{2,3}$','i')  OR email IS NULL;

----10 ) Vaciar la tabla de personal

----a)	Removiendo los constraints 
ALTER TABLE prestamo
    DROP CONSTRAINT fk_personal;
----b)	Y ejecutando Truncate en la tabla personal como fue requerido
TRUNCATE TABLE personal;
----c)	Sin embargo, esto dejaría huérfana la relación con la tabla hija prestamos.
----En este caso en particular podríamos ejecutar truncate también en prestamos sin tener efectos negativos, ya que este era el comportamiento que generaba el constraint.
TRUNCATE TABLE prestamo;
----d)	Finalmente podemos activar de nuevo los constraints y volver a utilizar las tablas.
ALTER TABLE prestamo
    ADD CONSTRAINT fk_personal
        FOREIGN KEY (clave_personal) 
        REFERENCES personal (clave_personal)
        ON DELETE CASCADE;
----e)	Como extra validamos que las tablas están limpias
SELECT * FROM personal;

SELECT * FROM prestamo;


